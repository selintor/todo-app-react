{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","onChange","e","target","value","name","placeholder","type","onClick","preventDefault","text","completed","id","Math","random","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.975b5187.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\n  const inputTextHandler = (e) =>{\n    // console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      {text: inputText, completed: false, id: Math.random() * 1000},\n    ]);\n    setInputText('');\n  };\n  const statusHandler = (e) => {\n    setStatus (e.target.value)\n  }\n    return(\n        <form>\n        <div className=\"select\">\n          <select onChange = {statusHandler} name=\"todos\" className=\"filter-todo\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"uncompleted\">Uncompleted</option>\n          </select>\n          <input value = {inputText} placeholder = \"What needs to be done?\" onChange = {inputTextHandler} type=\"text\" className=\"todo-input\" />\n          {/* <input value = {inputText} onFocus = {inputText = ''} onChange = {inputTextHandler} type=\"text\" className=\"todo-input\" /> */}\n          <button onClick = {submitTodoHandler} className=\"todo-button\" type=\"submit\"> +        \n        </button>\n        </div>\n      </form>\n    );\n}\nexport default Form;","import React from 'react';\n\nconst Todo = ({text, todo, todos, setTodos}) => {\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    };\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if(item.id === todo.id){\n                return{\n                    ...item, completed: !item.completed,\n                };\n            }\n            return item;\n        }))\n    }\n    return (\n\n      <div className=\"todo\">\n          <li className={`todo-item ${todo.completed ? \"completed\" : \" \"}`}>{text}</li>\n          <div className = \"buttons\">\n            <button onClick={completeHandler} className=\"complete-btn\">\n                <i className=\"fas fa-check\"></i>\n            </button>\n            <button onClick={deleteHandler} className=\"trash-btn\">\n                <i className=\"fas fa-trash\"></i>\n            </button>\n          </div>\n      </div>\n      \n    );\n};\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n    // console.log(todos)\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filteredTodos.map((todo) => (\n                    <Todo \n                    text = {todo.text} \n                    todo={todo}  \n                    key = {todo.id} \n                    todos={todos}\n                    setTodos={setTodos}\n                    />\n                ))}\n            </ul>\n       </div>\n    );\n};\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  // states\n  const [inputText, setInputText] = useState (\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    const filterHandler = () => {\n      switch(status){\n        case \"completed\":\n          setFilteredTodos(todos.filter(todo => todo.completed === true));\n          break;\n        case \"uncompleted\":\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n        default:\n          setFilteredTodos(todos);\n          break;\n      }\n    };\n    filterHandler();\n    const saveLocalTodos = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    saveLocalTodos();\n  }, [todos, status]);\n  // functions\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }\n    else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"General\">\n      {/* <h1>todos {inputText} </h1> */}\n      <h1>todos</h1>\n      <div className=\"Box\">\n        <Form \n        inputText = {inputText} \n        setTodos = {setTodos} \n        todos = {todos} \n        setInputText = {setInputText} \n        setStatus = {setStatus}\n        />\n        <TodoList \n        setTodos = {setTodos} \n        todos = {todos}\n        filteredTodos = {filteredTodos} \n        />\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}